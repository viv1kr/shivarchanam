<?php
require_once 'config/db.php';

// Get the specific story ID the user clicked on from the URL
$start_story_id = isset($_GET['story_id']) ? (int)$_GET['story_id'] : 0;
if ($start_story_id === 0) {
    // If no story ID is provided, redirect back to the homepage.
    header('Location: index.php');
    exit;
}

// Fetch all story groups to create the queue, ordered by their ID.
$all_stories_result = $conn->query("SELECT id, thumbnail_url FROM stories ORDER BY id ASC");
$story_groups = [];
$start_group_index = 0;
$current_index = 0;
while ($row = $all_stories_result->fetch_assoc()) {
    // Initialize each story group with its slides array
    $story_groups[$row['id']] = ['id' => $row['id'], 'thumbnail' => $row['thumbnail_url'], 'slides' => []];
    // Find the starting index for the story queue
    if ($row['id'] == $start_story_id) {
        $start_group_index = $current_index;
    }
    $current_index++;
}

// Fetch all slides for all stories and group them by their story_id
$all_slides_result = $conn->query("SELECT * FROM story_slides ORDER BY story_id ASC, sort_order ASC");
if ($all_slides_result) {
    while ($slide = $all_slides_result->fetch_assoc()) {
        $story_id = $slide['story_id'];
        if (isset($story_groups[$story_id])) {
            $story_groups[$story_id]['slides'][] = $slide;
        }
    }
}

// Convert the PHP array to a simple, numerically indexed array for JavaScript and encode it as JSON
$story_data_for_js = array_values($story_groups);
$json_story_data = json_encode($story_data_for_js);

?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
    <title>Story Viewer</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="assets/css/style.css">
</head>
<body class="story-page-body">

    <div class="story-viewer-page">
        <div class="story-content">
            <!-- Header section containing progress bars and user info -->
            <div class="story-header">
                <div class="progress-container" id="progress-container">
                    <!-- Progress bars will be dynamically generated by JavaScript -->
                </div>
                <div class="story-user-info" id="story-user-info">
                    <!-- User info (thumbnail and name) will be updated by JavaScript -->
                </div>
                <a href="index.php" class="story-close-btn"><i class="fas fa-times"></i></a>
            </div>

            <!-- This container will hold the currently active slide -->
            <div id="slides-container">
                <!-- Slides will be dynamically generated by JavaScript -->
            </div>

            <!-- Action buttons for download and share -->
            <div class="story-actions">
                <i class="fas fa-download" id="download-btn"></i>
                <i class="fas fa-paper-plane" id="share-btn"></i>
            </div>
            
            <!-- Invisible tap zones for navigation -->
            <div class="tap-zone left" id="tap-left"></div>
            <div class="tap-zone right" id="tap-right"></div>
        </div>
    </div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Get the story data and starting index from PHP
    const storyData = <?php echo $json_story_data; ?>;
    const startGroupIndex = <?php echo $start_group_index; ?>;

    // Get references to all the necessary DOM elements
    const progressContainer = document.getElementById('progress-container');
    const slidesContainer = document.getElementById('slides-container');
    const userInfo = document.getElementById('story-user-info');
    const downloadBtn = document.getElementById('download-btn');
    const shareBtn = document.getElementById('share-btn');
    const tapLeft = document.getElementById('tap-left');
    const tapRight = document.getElementById('tap-right');

    let currentGroupIndex = startGroupIndex;
    let currentSlideIndex = 0;
    let slideTimer;

    // Function to build the progress bars for the current story group
    function buildProgressBars(groupIndex) {
        progressContainer.innerHTML = ''; // Clear previous bars
        const group = storyData[groupIndex];
        group.slides.forEach(() => {
            const bar = document.createElement('div');
            bar.className = 'progress-bar';
            const fill = document.createElement('div');
            fill.className = 'progress-fill';
            bar.appendChild(fill);
            progressContainer.appendChild(bar);
        });
    }
    
    // The main function to display a story slide
    function playStory(groupIndex, slideIndex) {
        currentGroupIndex = groupIndex;
        currentSlideIndex = slideIndex;

        const group = storyData[groupIndex];
        if (!group || !group.slides[slideIndex]) {
            window.location.href = 'index.php'; // No more stories, go back to homepage
            return;
        }

        buildProgressBars(groupIndex);
        
        const slide = group.slides[slideIndex];

        // Preload the image to ensure it's ready before displaying
        const img = new Image();
        img.src = 'admin/' + slide.image_url;
        img.onload = () => {
            // Once the image is loaded, build the HTML for the slide
            slidesContainer.innerHTML = `
                <div class="story-slide active" style="background-image: url('${img.src}')">
                    <div class="story-overlay">
                        <div class="story-text-content">
                            <h2>${slide.title}</h2>
                            <p>${slide.description}</p>
                        </div>
                        ${slide.button_text && slide.button_link ? `
                        <div class="story-button-container">
                            <a href="${slide.button_link}" target="_blank" class="story-cta-btn">${slide.button_text}</a>
                        </div>` : ''}
                    </div>
                </div>`;
            
            userInfo.innerHTML = `<img src="admin/${group.thumbnail}" width="30" height="30" style="border-radius:50%; margin-right: 10px; object-fit: cover;"> Story ${groupIndex + 1}`;
            
            animateProgress(); // Start the timer and progress bar animation
        };
    }

    // Function to animate the progress bars
    function animateProgress() {
        clearTimeout(slideTimer);
        const progressFills = document.querySelectorAll('.progress-bar .progress-fill');
        
        // Instantly fill the progress bars of already viewed slides in the group
        for (let i = 0; i < currentSlideIndex; i++) {
            progressFills[i].style.transition = 'none';
            progressFills[i].style.width = '100%';
        }
        
        // Animate the current slide's progress bar
        const currentFill = progressFills[currentSlideIndex];
        if (currentFill) {
            currentFill.style.transition = 'none'; // Reset animation
            currentFill.style.width = '0%';
            void currentFill.offsetWidth; // Force reflow
            currentFill.style.transition = 'width 8s linear';
            currentFill.style.width = '100%';
        }
        
        slideTimer = setTimeout(next, 8000); // Set an 8-second timer to go to the next slide
    }

    // Function to go to the next slide or story group
    function next() {
        if (currentSlideIndex < storyData[currentGroupIndex].slides.length - 1) {
            playStory(currentGroupIndex, currentSlideIndex + 1);
        } else if (currentGroupIndex < storyData.length - 1) {
            playStory(currentGroupIndex + 1, 0);
        } else {
            window.location.href = 'index.php'; // End of all stories
        }
    }

    // Function to go to the previous slide or story group
    function prev() {
        if (currentSlideIndex > 0) {
            playStory(currentGroupIndex, currentSlideIndex - 1);
        } else if (currentGroupIndex > 0) {
            const prevGroupIndex = currentGroupIndex - 1;
            const lastSlideIndex = storyData[prevGroupIndex].slides.length - 1;
            playStory(prevGroupIndex, lastSlideIndex);
        }
    }
    
    // Event Listeners for navigation and actions
    tapLeft.addEventListener('click', prev);
    tapRight.addEventListener('click', next);

    downloadBtn.addEventListener('click', () => {
        const currentSlide = storyData[currentGroupIndex].slides[currentSlideIndex];
        const link = document.createElement('a');
        link.href = 'admin/' + currentSlide.image_url;
        link.download = `story_${currentSlide.id}.jpg`;
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
    });

    shareBtn.addEventListener('click', () => {
        if (navigator.share) {
            navigator.share({
                title: 'Check out this story from Shivarchanam Temple!',
                url: window.location.href
            }).catch(console.error);
        } else {
            alert('Web sharing is not supported on this browser.');
        }
    });

    // Start the story viewer
    playStory(startGroupIndex, 0);
});
</script>
</body>
</html>

